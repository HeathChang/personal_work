1.
  동기 처리 방식: 하나의 작업이 끝날 때까지 기다렸다가 다음 작업을 처리하는 방식
2.
  비동기 처리 방식: 병렬로 동시에 여러 가지 일을 처리하는 방식 (이때, 결과값반환 X)
  //처리를 완료하기 전에 다음 명령을 실행해서 출력
3.
  콜백: 어떤 실행문을 마치면 내부적으로 자동 호출하는 기능
4. 
  객체: 서로 연관된 데이터와 그 데이터를 처리하는 함수를 묶어서 처리함으로 코드를 단순하게 하는 수납 상자와 같은 역할을 함  
5.
  리팩토링: 기능은 똑같은데, 내부 코드를 좀 더 효율적으로 바꾸는 것
6.
  npm: JS 프로그래밍 언어를 위한 패키지 관리자로 패키지/모듈을 관리해주는 도구
7.
  프레임워크: 사용자의 요청 처리, 인증, 보안, 파일, 서비스 등과 같은 작업을 미리 구현해 놓은 것을 의미
8.
  라우팅: 경로에 따라 분기하여 처리한다. (특정 경로로 들어오는 요청에 대하여 함수를 수행 시킬 수가 있는 기능을 express 가 제공해 주는것)
9.
  nodeJs express: nodeJS을 위한 웹 프레임워크
10.
  프레임워크: 미리 구현된 공통적인 기능을 사용하고, 웹사이트 개발자는 해당 웹사이트 개발에 집중할 수 있는 목적으로 만들어진 반제품.
11.
  시맨틱 URL: 사용하기 쉽고 검색엔진에 친화적인 방식 
12. 
  compression: 웹 브라우저에 응답할 때 해당 데이터를 압축해서 보내는 기술 (gzip 형태)
13. 
  미들웨어: functions which are passed control during execution of async  functions.(in Mongoose)
  미들웨어 종류(5가지): application-lvl(app) && Router-lvl && Error-handling && Built-in && Third-Party (compression, body-parser)
14.
  request.Params 관련 내용: https://medium.com/@bouncewind0105/request-param-query-body-%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90-2e7e4fddd8b9
15.
  HTTPS : 웹서어와 웹 브라우저가 통신할 때 서로 암호화 해 중간에 누가 가로채더라도, 데이터를 알수 없고,
          웹사이트의 도메인을 변조하는 피싱을 하더라도 인증서를 통해 알아채릴 수 있음. 
16. HTTP Cookie :
  서버가 사용자의 웹 브라우저에 전송하는 작은 데이터 조각으로, 브라우저는 이를 저장했다가, 동일한 서버가 재 요청 시 저장된 데이터와 함께 전송.
17. 쿠키의 종류 :
  세션쿠키: 웹 브라우저가 켜져있는 동안 유효한 쿠키라서 브라우저를 종료했다가 다시 실행하면 사라짐
  영구쿠키: 영속적인 쿠키로서 웹 브라우저를 종료했다가 실행해도 살아있다.
18. 
  passport.js: strategy에 따른 요청에 인증하기 위한 목적을 지닌 인증 미들웨어로 routes, DB 등을 mount하지 않고 application-level에서 결정할 수 있어 유연함
19.
  플래시 메시지: 일회용 메시지로 내부적으로 세션 스토어에 데이터를 저장했다가 사용 후에는 지우는 특성이 있다. 
20.
  ODM (Object Document Mapper): NoSQL에서 Document Database를 지원하기 위해 데이터를 변환하는 프로그래밍 기법
21.
  ORM (Object Relational Mapper):객체(클래스)와 관계(관계형 데이터 베이스)와의 설정을 의미한다.
22.
  API:  
    프로그램에서 사용할 수 있도록, 운영 체제나 프로그래밍 언어가 제공하는 기능을 제어할 수 있게 만든 인터페이스
23. 
  Rest API (Representational State Transfer):  Client 가 access& manipulate resources using pre-defined methods.
24.
  JWT:  각 객체 사이에서 속성 정보 (Claim)을 JSON 데이터 구조로 표현하고 암호화를 통해 정보를 전달하는 Token
  Claim: 사용자에 대한 프로퍼티나 속성


1.
  동기 처리 방식: 하나의 작업이 끝날 때까지 기다렸다가 다음 작업을 처리하는 방식
2.
  비동기 처리 방식: 병렬로 동시에 여러 가지 일을 처리하는 방식 (이때, 결과값반환 X)
  //처리를 완료하기 전에 다음 명령을 실행해서 출력
3.
  콜백: 어떤 실행문을 마치면 내부적으로 자동 호출하는 기능
4. 
  객체: 서로 연관된 데이터와 그 데이터를 처리하는 함수를 묶어서 처리함으로 코드를 단순하게 하는 수납 상자와 같은 역할을 함  
5.
  리팩토링: 기능은 똑같은데, 내부 코드를 좀 더 효율적으로 바꾸는 것
6.
  npm: JS 프로그래밍 언어를 위한 패키지 관리자로 패키지/모듈을 관리해주는 도구
7.
  프레임워크: 사용자의 요청 처리, 인증, 보안, 파일, 서비스 등과 같은 작업을 미리 구현해 놓은 것을 의미
8.
  라우팅: 경로에 따라 분기하여 처리한다. (특정 경로로 들어오는 요청에 대하여 함수를 수행 시킬 수가 있는 기능을 express 가 제공해 주는것)

9.
  nodeJs express: nodeJS을 위한 웹 프레임워크
10.
  프레임워크: 미리 구현된 공통적인 기능을 사용하고, 웹사이트 개발자는 해당 웹사이트 개발에 집중할 수 있는 목적으로 만들어진 반제품.
11.
  시맨틱 URL: 사용하기 쉽고 검색엔진에 친화적인 방식 
  